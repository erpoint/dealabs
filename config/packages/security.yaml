security:
  enable_authenticator_manager: true
  password_hashers:
    App\Entity\User:
      algorithm: auto

  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    login:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
      pattern: ^/api
      stateless: true
      jwt: ~
    # 'main' is the name of the firewall (can be chosen freely)
    main:
      # 'pattern' is a regular expression matched against the incoming
      # request URL. If there's a match, authentication is triggered
      lazy: true
      pattern: ^/.*$
      provider: app_user_provider
      custom_authenticator: App\Security\AppCustomAuthenticator
      logout:
        path: app_logout
        target: app_login
        invalidate_session: true
        # where to redirect after logout
      #form_login:
        # "app_login" is the name of the route created previously
       # login_path: app_login
        #check_path: app_login
